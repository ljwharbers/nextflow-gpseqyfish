// Singularity params
// singularity.enabled    = true
// singularity.autoMounts = true


// Global default params
params {
    // input directory
	indir = "null"

	// output directory
	outdir = "null"

    // Set to true if starting from tiff files in subdirectories
    tif = false

    // Default settings
    dx = 65
    dy = 65
    dz = 250

    dapi = "390 nm"
    yfish = "631 nm"

    k_sigma = 2

    // Resource options
    // Defaults only, expected to be overwritten
    max_memory = "1.GB"
    max_cpus = 1
    max_time = "2.h"
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Profiles
profiles {
     test { includeConfig 'conf/test.config' }
     ht_hpc { includeConfig 'conf/ht_hpc.config' }
     uppmax { includeConfig 'conf/uppmax.config' }
     sirius { includeConfig 'conf/sirius.config' }
     lhpc { includeConfig 'conf/lhpc.config' }
}

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
